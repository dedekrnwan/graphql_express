version: '3.6'

services: 
  elasticsearch:
    container_name: graph_elasticsearch
    build:
      context: ./docker/elasticsearch
    volumes:
      - type: bind
        source: ./docker/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
      - type: volume
        source: graph_elasticsearch
        target: /usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    networks: 
      - default
  kibana:
    container_name: graph_kibana
    build:
      context: ./docker/kibana/
    ports:
      - "5601:5601"
    restart: unless-stopped
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    volumes:
      - type: bind
        source: ./docker/kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true 
  apm-server:
    container_name: graph_apm_server
    build:
      context: ./docker/apm
    ports:
        - "127.0.0.1:${APM_SERVER_PORT:-8200}:8200"
        - "127.0.0.1:${APM_SERVER_MONITOR_PORT:-6060}:6060"
    volumes:
      - type: bind
        source: ./docker/apm/config/apm-server.yml
        target: /usr/share/apm-server/apm-server.yml
    depends_on:
      - elasticsearch
      - kibana
    links:
      - kibana
      - elasticsearch
    networks: 
      - default
#   redis:
#     image: redis:alpine
#     container_name: graph_redis
#     volumes:
#       - type: volume
#         source: graph_redis
#         target: /data
#     networks: 
#       - default
#     ports:
#        - "6379:6379"
#     command: ["redis-server", "--bind", "redis", "--port", "6379", "--requirepass","secret", "--appendonly","yes"]
  database:
    build:
      context: ./docker/postgresql
    ports:
      - "5432:5432"
    container_name: graph_database
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    volumes:
      - type: volume
        source: graph_database
        target: /var/lib/postgresql
    networks: 
      - default
  app:
    build: 
      context: .
    depends_on:
      - database
      - elasticsearch
    #   - redis
      - apm-server
    container_name: graph_app
    restart: unless-stopped
    env_file: .env
    ports:
      - "4000:4000"
    volumes:
      - .:/usr/src/app
    networks: 
      - default
    links:
      - database
      - apm-server
    #   - redis
      - elasticsearch
volumes:
  graph_database:
  graph_elasticsearch:
#   graph_redis:

networks: 
  default:
    driver: bridge
